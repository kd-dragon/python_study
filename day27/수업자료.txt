
======================= 마우스 이벤트 예제 (flags)  =======================

  
import cv2

title = 'mouse event'                   # 창 제목
img = cv2.imread('blank_img.jpg') # 백색 이미지 읽기
cv2.imshow(title, img)                  # 백색 이미지 표시

colors = {'black':(0,0,0),
         'red' : (0,0,255),
         'blue':(255,0,0),
         'green': (0,255,0) } # 색상 미리 정의

def onMouse(event, x, y, flags, param): # 마우스 콜백 함수 구현 ---①
    print(event, x, y, flags)                # 파라미터 출력
    color = colors['black']
    if event == cv2.EVENT_LBUTTONDOWN:  # 왼쪽 버튼 누름인 경우 ---②
        # 컨트롤키와 쉬프트 키를 모두 누른 경우
        if flags & cv2.EVENT_FLAG_CTRLKEY and flags & cv2.EVENT_FLAG_SHIFTKEY : 
            color = colors['green']
        elif flags & cv2.EVENT_FLAG_SHIFTKEY : # 쉬프트 키를 누른 경우
            color = colors['blue']
        elif flags & cv2.EVENT_FLAG_CTRLKEY : # 컨트롤 키를 누른 경우
            color = colors['red']
        # 지름 30 크기의 검은색 원을 해당 좌표에 그림
        cv2.circle(img, (x,y), 30, color, -1) 
        cv2.imshow(title, img)          # 그려진 이미지를 다시 표시 ---③

cv2.setMouseCallback(title, onMouse)    # 마우스 콜백 함수를 GUI 윈도우에 등록 ---④

while True:
    if cv2.waitKey(0) & 0xFF == 27:     # esc로 종료
        break
cv2.destroyAllWindows()


======================= 트랙바 이벤트 예제 =======================

슬라이드 모양의 인터페이스를 마우스로 움직여서 값을 입력받은 GUI 요소

cv2.getTrackbar()
cv2.getTrackbarPos() : 트랙바의 값을 얻기 위한 함수
TrackbarCallback(value): 트랙바 이벤트 콜백함수

1)
cv2.createTrackbar(trackbar_name, win_name, value, count, onChange): 트랙바 생성

 - trackbar_name : 트랙바 이름
 - win_nam : 트랙바를 표시할 창 이름(title)
 - value: 트랙바 초기값, 0~count 사이의 값
 - count: 트랙바 눈금의 개수, 트랙바가 표시할 수 있는 최대 값
 - onChange: TrackbarCallback, 트랙바 이벤트 핸들러 함수

2)
TrackbarCallback(value): 트랙바 이벤트 콜백함수
 - value: 트랙바가 움직인 새 위치 값

3) 
pos = cv2.getTrackbarPos(trackbar_name, win_name)
 - trackbar_name: 찾고자 하는 트랙바 이름
 - win_name: 트랙바가 있는 창의 이름
 - pos: 트랙바 위치값


import cv2
import numpy as np

win_name = 'Trackbar'                                   # 창 이름

img = cv2.imread('blank_img.jpg')
cv2.imshow(win_name,img)                                # 초기 이미지를 창에 표시

# 트랙바 이벤트 처리 함수 선언
def onChange(x):                                        
    print(x)                                            # 트랙바 새로운 위치 값 
    # 'R', 'G', 'B' 각 트랙바 위치 값   
    r = cv2.getTrackbarPos('R',win_name)               
    g = cv2.getTrackbarPos('G',win_name)               
    b = cv2.getTrackbarPos('B',win_name)               
    print(r, g, b)
    img[:] = [b,g,r]                                    # 기존 이미지에 새로운 픽셀 값 적용
    cv2.imshow(win_name, img)                           # 새 이미지 창에 표시

# 트랙바 생성
cv2.createTrackbar('R', win_name, 255, 255, onChange)  
cv2.createTrackbar('G', win_name, 255, 255, onChange)
cv2.createTrackbar('B', win_name, 255, 255, onChange)

while True:
    if cv2.waitKey(1) & 0xFF == 27:
        break
cv2.destroyAllWindows()        



########## 사용여부 트랙바 추가
switch = cv2.getTrackbarPos('Switch', win_name)
 if(switch == 0) :
        img[:] = 255
    else:
        img[:] = [b,g,r]  

cv2.createTrackbar('Switch', win_name, 0, 1, onChange)