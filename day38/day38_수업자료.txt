day37 수업자료
- 모듈과 패키지

파이썬 스크립트를 작성할때면 비슷한 클래스와 함수를 작성하게 된다.
그러므로 공통되는 부분은 빼내서 모듈과 패키지로 만들면 된다.

모듈(module): 변수, 함수, 클래스 등을 모아 놓은 스크립트 파일(간단한 기능만 담을때 사용)
패키지(package): 여러 모듈을 묶은 것 (코드가 많고 복잡할 때 사용, 패키지는 기능들이 모듈로 여러개 나뉘어있고 관련된 모듈끼리 폴더에 모여있는 형태)


* 패키지 만들기

폴더 안에 __init__.py가 있으면 패키지다.
이렇게 프로젝트 폴더안에 __init__.py파일로 저장한다.(파일 내용은 비워 둘 수 있다.)
폴더(디렉터리) 안에 이 파일이 있으면 해당 폴더는 패키지로 인식된다.
(파이썬 3.3부터는 굳이 안넣어도 되지만 하위 버전과 호환시키기 위해 넣자)


패키지의 모듈에서는 __name__ 변수에 패키지.모듈 형식으로 이름이 들어갑니다. 
즉, calcpkg 패키지의 geometry.py에서 __name__의 값을 출력하도록 만들고
, import로 가져오면 'calcpkg.geometry'가 나옵니다.


//main 은 반드시 절대경로 
main.py에서 opertaion 모듈을 import 하려했을 때, 상대 경로로 접근하면 다음과같은 에러메세지가 뜬다.
ImportError: attempted relative import with no known parent package

main모듈에서 상대경로를 사용할경우 파이썬이 상대경로의 출발점, 즉 main 모듈의 위치를 찾지 못하기 때문이다.
모듈 실행 뒤 상대 경로를 통해 다른 모듈을 import 할때, 
파이썬은 모듈의 이름( __name__ )에 기반을 두고 현재모듈의 위치를 찾는다.
따라서 이름이 __main__으로 바껴버린 모듈은 파이썬이 위치를 찾을 수 가 없다. 
상대경로의 출발점이 되는 위치를 못찾아 위와 같은 에러가 발생하는 것이다.

따라서 메인파일에선 절대경로를, 그외의 하위모듈은 상대경로를 사용하게된다








